<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:LogiSolver.Desktop">

	<ResourceDictionary.MergedDictionaries>
		<!-- Order is important -->
		<ResourceDictionary Source="Colors.xaml" />
		<!-- <ResourceDictionary Source="Fonts.xaml" /> -->
	</ResourceDictionary.MergedDictionaries>

	<!-- Hoverless button -->
	<Style TargetType="{x:Type Button}" x:Key="Hoverless">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- System Icon button -->
	<Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
	</Style>

	<!-- Window Control button -->
	<Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
		<Setter Property="FontWeight" Value="UltraBold" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource ForegroundAccentBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Window Close Button -->
	<Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="Red" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="DarkRed" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  -->
	<Style TargetType="{x:Type Button}" x:Key="MainMenuButton">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource BackgroundLightBrush}" />
		<Setter Property="BorderThickness" Value="1" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							CornerRadius="3"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource ForegroundVeryDarkBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource ForegroundAccentBrush}" />
				<Setter Property="BorderBrush" Value="{StaticResource ForegroundAccentBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>